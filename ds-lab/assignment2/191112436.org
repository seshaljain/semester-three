
#+title: DS Lab Assignment 2
#+subtitle: Seshal Jain, Scholar Number 191112436, CSE 3
#+options: h:2 num:nil toc:nil author:nil
#+date: August 18, 2020
#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}

* Lower Triangular Matrix
#+BEGIN_SRC c :tangle a2p1.c
#include<stdio.h>

#define SIZE 4

int get1DPos(int i, int j) {
  return i * (i + 1) / 2 + j;
}

int main(){
  int twoDArr[SIZE][SIZE] = {9,0,0,0,
                             1,2,0,0,
                             5,6,7,0,
                             9,8,7,6};

  int arr[SIZE * (SIZE + 1) / 2];

  for (int i = 0; i < SIZE; i++) {
    for (int j = 0; j < SIZE; j++) {
      printf("%d ", twoDArr[i][j]);
    }
    printf("\n");
  }

  for (int i = 0; i < SIZE; i++) {
    for (int j = 0; j < SIZE; j++) {
      arr[get1DPos(i, j)] = twoDArr[i][j];
    }
  }

  printf("Given array is:   ");

  for (int i = 0; i < SIZE * (SIZE + 1) / 2; i++) {
    printf("%d ", arr[i]);
  }

  int m = 0, n = 0, value = 0;
  printf("\nEnter i j: ");
  scanf("%d %d", &m, &n);

  printf("Enter new value: ");
  scanf("%d", &value);

  arr[get1DPos(m, n)] = value;

  printf("Updated array is: ");
  for (int i = 0; i < SIZE * (SIZE + 1) / 2; i++) {
    printf("%d ", arr[i]);
  }

  printf("\n");
  return 0;
}
#+END_SRC

** Output
#+BEGIN_EXAMPLE
$ ./a2p1
9 0 0 0
1 2 0 0
5 6 7 0
9 8 7 6
Given array is:   9 1 2 5 6 7 9 8 7 6
Enter i j: 1 1
Enter new value: 5
Updated array is: 9 1 5 5 6 7 9 8 7 6
#+END_EXAMPLE

* Upper Triangular Matrix
#+BEGIN_SRC c :tangle a2p2.c
#include<stdio.h>

#define SIZE 4

int get1DPos(int i, int j) {
  return (SIZE * i) + j - (i * (i + 1)) / 2;
}

int main(){
  int twoDArr[SIZE][SIZE] = {1,2,3,4,
                             0,3,4,2,
                             0,0,6,9,
                             0,0,0,1};

  int arr[SIZE*(SIZE + 1) / 2];

  for (int i = 0; i < SIZE; i++) {
    for (int j = 0; j < SIZE; j++) {
      printf("%d ", twoDArr[i][j]);
    }
    printf("\n");
  }

  for (int i = 0; i < SIZE; i++) {
    for (int j = i; j < SIZE; j++) {
      arr[get1DPos(i, j)] = twoDArr[i][j];
    }
  }

  printf("Given array is:   ");

  for (int i = 0; i < SIZE * (SIZE + 1) / 2; i++) {
    printf("%d ", arr[i]);
  }

  int m = 0, n = 0, value = 0;
  printf("\nEnter i j: ");
  scanf("%d %d", &m, &n);

  printf("Enter new value: ");
  scanf("%d", &value);

  arr[get1DPos(m, n)] = value;

  printf("Updated array is: ");
  for (int i = 0; i < SIZE * (SIZE + 1) / 2; i++) {
    printf("%d ", arr[i]);
  }

  printf("\n");
  return 0;
}
#+END_SRC

** Output
#+BEGIN_EXAMPLE
$ ./a2p2
1 2 3 4
0 3 4 2
0 0 6 9
0 0 0 1
Given array is:   1 2 3 4 3 4 2 6 9 1
Enter i j: 2 2
Enter new value: 7
Updated array is: 1 2 3 4 3 4 2 7 9 1
#+END_EXAMPLE

* Tridiagonal Matrix
#+BEGIN_SRC c :tangle a2p3.c
#include<stdio.h>

#define SIZE 4

int get1DPos(int i, int j) {
  return (i - 1) * 3 + (j - i + 2) + 1;
}

int main(){
  int twoDArr[SIZE][SIZE] = {1,7,0,0,
                             4,3,2,0,
                             0,2,6,9,
                             0,0,2,1};

  int arr[SIZE * 3 - 2];

  for (int i = 0; i < SIZE; i++) {
    for (int j = 0; j < SIZE; j++) {
      printf("%d ", twoDArr[i][j]);
    }
    printf("\n");
  }

  for (int i = 0, j = 0; i < SIZE; i++) {
    if (i == 0) {
      arr[j++] = twoDArr[i][i];
      arr[j++] = twoDArr[i][i + 1];
    } else if (i == SIZE - 1) {
      arr[j++] = twoDArr[i][i - 1];
      arr[j++] = twoDArr[i][i];
    } else {
      arr[j++] = twoDArr[i][i - 1];
      arr[j++] = twoDArr[i][i];
      arr[j++] = twoDArr[i][i + 1];
    }
  }

  printf("Given array is:   ");
  for (int i = 0; i < (SIZE * 3 - 2); i++) {
    printf("%d ", arr[i]);
  }

  int m = 0, n = 0, value = 0;
  printf("\nEnter i j: ");
  scanf("%d %d", &m, &n);

  printf("Enter new value: ");
  scanf("%d", &value);

  arr[get1DPos(m, n)] = value;

  printf("Updated array is: ");
  for (int i = 0; i < 10; i++) {
    printf("%d ", arr[i]);
  }

  printf("\n");
  return 0;
}
#+END_SRC

** Output
#+BEGIN_EXAMPLE
$ ./a2p3
1 7 0 0
4 3 2 0
0 2 6 9
0 0 2 1
Given array is:   1 7 4 3 2 2 6 9 2 1
Enter i j: 3 3
Enter new value: 9
Updated array is: 1 7 4 3 2 2 6 9 2 9
#+END_EXAMPLE
