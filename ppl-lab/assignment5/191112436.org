#+title: PPL Lab Assignment 5
#+subtitle: Seshal Jain, Scholar Number 191112436, CSE 3
#+options: h:2 num:nil toc:nil author:nil
#+date: September 8, 2020
#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}

* Program 1
Program to use static, local, global variables in different contexts
Program to sort an array using pointers
#+BEGIN_SRC c++ :tangle a5p1.cpp
#include <iostream>
using namespace std;

int b = 42;

void printLocal(int a) {
  a = 17;
  cout << a << "\n";
}

void printGlobal() {
  cout << b << "\n";
}

void printStatic() {
  static int x = 19;
  x++;
  cout << x << "\n";
}

int main()
{
  int a = 5;
  cout << "[ Local variables ]" << "\n";
  cout << "Inner a = ";
  printLocal(a);
  cout << "Outer a = " << a << "\n";

  cout << "\n" << "[ Global variables ]" << "\n";
  cout << "Global b: ";
  printGlobal();
  cout << "Local b: " << b << "\n";

  cout << "\n" << "[ Static variables ]" << "\n";
  cout << "First function call: ";
  printStatic();
  cout << "Second function call: ";
  printStatic();
  return 0;
}
#+END_SRC

** Output
#+begin_example
$ ./a5p1
[ Local variables ]
Inner a = 17
Outer a = 5

[ Global variables ]
Global b: 42
Local b: 42

[ Static variables ]
First function call: 20
Second function call: 21
#+end_example

* Program 2
Program to demonstrate global variables
#+BEGIN_SRC cpp :tangle a5p2.cpp
#include <iostream>
using namespace std;

int a = 15;

void func1() {
  cout << "From func1(): " << a << "\n";
  a++;
  cout << "Value changed in func1" << "\n";
}

void func2() {
  cout << "From func2(): " << a << "\n";
}

int main()
{
  cout << "From main(): " << a << "\n";
  func1();
  func2();
  return 0;
}

#+END_SRC

** Output
#+begin_example
$./a5p2
From main(): 15
From func1(): 15
Value changed in func1
From func2(): 16
#+end_example

* Program 3
#+BEGIN_SRC cpp :tangle a5p3.cpp
#include <iostream>
using namespace std;

int main()
{
  int a[5][5] = {
    {1,2,3,9,7},
    {0,0,0,6,0},
    {0,0,3,0,0},
    {0,2,0,0,0},
    {5,6,7,1,3}
  };

  cout << "Given matrix is:\n";
  for (int i = 0; i < 5; i++) {
    for (int j = 0; j < 5; j++) {
      cout << a[i][j] << " ";
    }
    cout << "\n";
  }

  int sum = 0;
  for (int i = 0; i < 5; i++) {
    if (i == 0 || i == (5 - 1)) {
      for (int j = 0; j < 5; j++) {
        sum += a[i][j];
      }
    } else {
      sum += a[i][5 - i - 1];
    }
  }

  cout << "\n" << sum << "\n";
  return 0;
}
#+END_SRC

** Output
#+begin_example
$ ./a5p3
Given matrix is:
1 2 3 9 7
0 0 0 6 0
0 0 3 0 0
0 2 0 0 0
5 6 7 1 3

55
#+end_example

* Program 4
Program to calculate factorial using recursion
#+BEGIN_SRC cpp :tangle a5p4.cpp
#include <iostream>
using namespace std;

int fact(int n) {
  if (n == 1) {
    return n;
  } else return n * fact(n - 1);
}

int main()
{
  int n;
  cout << "Enter number: ";
  cin >> n;
  cout << fact(n) << "\n";
  return 0;
}

#+END_SRC

** Output
#+begin_example
$ ./a5p4
Enter number: 4
24
#+end_example
